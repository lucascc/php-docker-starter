version: '3'
services:
  web:
    container_name: starter_web
    image: nginx:alpine
    volumes:
    - "./etc/nginx/default.conf:/etc/nginx/conf.d/default.conf"
    - "./etc/ssl:/etc/ssl"
    - "./app:/var/www/html"
    - "./etc/nginx/default.template.conf:/etc/nginx/conf.d/default.template"
    ports:
    - "8000:80"
    - "3000:443"
    environment:
    - NGINX_HOST=${NGINX_HOST}
    command: /bin/sh -c "envsubst '$$NGINX_HOST' < /etc/nginx/conf.d/default.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
    restart: always
    depends_on:
    - php
    - mysqldb
    - mongodb
  php:
    container_name: starter_php
    image: nanoninja/php-fpm:${PHP_VERSION}
    restart: always
    volumes:
    - "./etc/php/php.ini:/usr/local/etc/php/conf.d/php.ini"
    - "./app:/var/www/html"
  composer:
    container_name: starter_composer
    image: "composer"
    volumes:
    - "./app:/app"
    command: install
  mysqldb:
    container_name: starter_db
    image: mysql:${MYSQL_VERSION}
    restart: always
    env_file:
    - ".env"
    environment:
    - MYSQL_DATABASE=${MYSQL_DATABASE}
    - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    - MYSQL_USER=${MYSQL_USER}
    - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    ports:
    - "8989:3306"
    volumes:
    - "./data/db/mysql:/var/lib/mysql"
  mongodb:
    image: mongo:${MONGODD_VERSION}
    container_name: starter_mongodb
    env_file:
    - ".env"
    environment:
    - MONGO_DATA_DIR=/data/db/mongo
    - MONGO_LOG_DIR=/dev/null
    - MONGODB_USER=${MONGODD_USER}
    - MONGODB_PASS=${MONGODD_PASSWORD}
    volumes:
    - ./data/db/mongo:/data/db
    ports:
    - 27017:27017
    command: mongod --smallfiles --logpath=/dev/null --quiet
